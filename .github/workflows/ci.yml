name: Python CI/CD

on:
  push:
    branches:
      - main
      - feature/flask-factory-pattern
  pull_request:
    branches:
      - main
      - feature/flask-factory-pattern
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build & Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.2'

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.virtualenvs
          key: venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ matrix.python-version }}-

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config repositories.pypi https://pypi.tuna.tsinghua.edu.cn/simple

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Run pre-commit checks
        run: poetry run pre-commit run --all-files || true

      - name: Run Pytest
        run: poetry run pytest -v
