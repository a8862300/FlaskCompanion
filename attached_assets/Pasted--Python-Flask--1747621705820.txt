"请基于 Python 和 Flask 框架，构建一个功能相对完善、可直接运行的库存管理系统。

核心要求：

界面语言： 所有用户可见的界面文本（包括菜单、按钮、标签、表格头部、提示信息、闪现消息等）都必须是 完全中文 的。 这是最重要的要求。
技术栈：

后端： Python, Flask
数据库： SQLAlchemy (使用 SQLite 数据库文件)
前端： Jinja2 模板引擎用于服务器端渲染动态页面。不使用 Tailwind CSS、Bootstrap 或其他复杂的 CSS 框架，界面应采用基础的 HTML 结构和浏览器默认样式，或少量内联/简单 CSS。
数据库模型：

定义以下核心模型及其关联关系：

用户 (User): 用于系统登录和管理。包含字段：用户名, 密码哈希，（可选）角色字段。
客户 (Customer): 销售订单的客户信息。包含字段：姓名, 联系人, 电话, 地址。不包含邮箱字段。
供应商 (Supplier): 原材料或商品的供应方。包含字段：名称, 联系人, 电话, 地址。
商品分类 (Category): 成品商品的分类。包含字段：名称, 描述。
商品 (Product): 库存中的成品商品。包含字段：名称, SKU (库存单位), 描述, 销售价格, 成本价格, 库存数量, 所属分类 (关联 Category)，（可选）默认供应商 (关联 Supplier)。
原材料 (RawMaterial): 生产成品所需的原材料。包含字段：名称, 单位 (如：千克, 米, 个), 库存数量, 单位成本 (当前的平均或最近采购成本), （可选）安全库存量。
订单 (Order): 销售订单记录。包含字段：订单号 (自动生成), 下单日期, 客户 (关联 Customer), 订单状态 (如：待支付, 已支付, 已发货, 已完成, 已取消), 支付方式 (如：支付宝, 微信支付, 货到付款), 订单总金额 (自动计算), 备注。
订单项 (OrderItem): 订单中的具体商品。包含字段：订单 (关联 Order), 商品 (关联 Product), 购买数量, 成交单价, 小计金额 (自动计算)。
原材料采购记录 (RawMaterialPurchase): 记录原材料的采购情况。包含字段：采购日期, 原材料 (关联 RawMaterial), 供应商 (关联 Supplier), 采购数量, 采购时的单位价格, 采购总价。建立模型间合适的外键关联和关系属性（如订单能访问其订单项，订单项能访问关联的商品和订单）。
核心功能模块：

为以下实体实现管理界面，包含：列表、查看详情（如适用）、新建、编辑、删除功能。

用户管理： 列表（支持搜索、分页）、添加、编辑、删除、用户登录、用户登出。
客户管理： 列表（支持搜索、分页）、查看详情、添加、编辑、删除。
供应商管理： 列表（支持搜索、分页）、查看详情、添加、编辑、删除。
商品分类管理： 列表（支持搜索、分页）、查看详情、添加、编辑、删除。
商品管理： 列表（支持搜索、分页、按分类筛选）、查看详情、添加、编辑、删除。在列表中醒目显示低库存商品。
原材料管理： 列表（支持搜索、分页）、查看详情、添加、编辑、删除。在列表中醒目显示低库存原材料（如果RawMaterial模型包含安全库存量字段）。
原材料采购管理： 列表（支持按日期范围、供应商、原材料搜索和分页）、添加（记录采购信息）。
订单管理：
列表： 显示订单列表，必须支持按 客户、日期范围 (年、月、日、季度)、订单状态 和 包含特定分类商品 进行搜索和高级筛选，并实现分页。
查看详情： 显示订单基本信息、客户信息、所有订单项及总计。
新建： 创建新订单，界面需支持动态添加、修改、删除订单项（可以使用基础 HTML 和少量 JS 实现）。自动计算订单项小计和订单总金额。
编辑： 修改现有订单，界面需支持动态修改订单项。自动重新计算相关金额。
删除： 删除订单。
打印出库单： 实现生成出库单的打印页面 (例如，独立的路由 /orders/<id>/outbound_slip)。该页面应使用一个专门的出库单打印模板，包含订单和订单项的必要信息（如订单号、日期、客户信息、收货地址、商品列表、数量等）。模板的 HTML/CSS 结构应清晰、模块化，便于用户后续按实际需求修改打印样式和内容。 从订单详情页提供链接到此功能。
特定功能：

用户认证： 实现用户登录和用户登出，保护管理页面只允许登录用户访问。
订单项管理： 在订单新建/编辑界面中实现动态的订单项增删改交互。
库存更新： 在订单新建、编辑、删除时，自动更新成品商品的库存数量。在原材料采购和原材料库存调整时更新原材料的库存数量。
库存调整： 实现一个功能允许手动增加或减少某个成品商品或原材料的库存数量，并记录调整原因和日期。
低库存提醒： 在仪表盘和对应的列表页面提示库存低于设定的阈值的成品商品和原材料。
仪表盘： 作为首页显示系统总览统计（用户数、客户总数、成品商品总数、原材料总种类数、订单总数）、近期订单、低库存成品商品、低库存原材料。可以考虑显示原材料库存总价值或近期原材料采购概览。
报表功能： 提供基础的销售统计报表（如按商品分类销售额、月度总销售额），以及“月度原材料支出报告” (根据原材料采购记录统计每月的总采购成本)。可以增加畅销商品、客户购买力排名等报表。考虑实现简单的 数据导出功能（例如导出为 CSV 文件）。
API 接口： 提供用于前端动态交互（如订单项填写时通过商品ID获取商品信息和单价，获取客户列表等）所需的基础 API 接口。
用户界面反馈： 在用户完成添加、编辑、删除等操作后，使用 Flask 的闪现消息 (Flash Messages) 给予用户操作结果的提示。
项目结构：

生成一个结构清晰、包含 Flask 项目标准文件（如 app.py, models.py, routes.py, forms.py, templates/ 文件夹, static/ 文件夹等）的、可以直接运行的基础项目代码。代码应遵循良好的编程实践，易于理解和扩展。

请生成符合以上所有要求的基础代码，提供一个功能相对完善、界面全中文、可以直接启动运行的库存管理系统基础框架。

